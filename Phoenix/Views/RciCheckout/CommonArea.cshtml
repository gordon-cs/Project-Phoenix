@model Phoenix.Models.ViewModels.FullRciViewModel

@{
    ViewBag.Title = "Checkout";
    ViewBag.ViewTitle = "Checkout: " + Model.BuildingCode + " " + Model.RoomNumber;
    ViewBag.Name = TempData["user"];
    ViewBag.MenuExists = "T";
    ViewBag.Role = TempData["role"];
}

@section Styles{
    @Styles.Render("~/bundles/page_specific/css/rci-checkout")
}

@section Scripts{
    @Scripts.Render("~/bundles/page_specific/js/rci-checkout")
}

<div class="view">
    <h2>@ViewBag.ViewTitle</h2>

    @{ var roomComponentsGroupedByArea = Model.RoomComponents.GroupBy(x => x.RoomArea); }

    @foreach (var roomArea in roomComponentsGroupedByArea)
    {
        <h2>@roomArea.Key</h2>

        foreach (var component in roomArea)
        {
            var visible = "hide";

            if (component.Damages.Any() || component.Fines.Any())
            {
                visible = "show";
            }
            <div class="pane component" id="@component.RoomComponentTypeId">
                <h2 class="pane-title div-list-toggle component-title">@component.RoomComponentName<i class="material-icons">arrow_drop_down</i></h2>
                <div class="checkout pane-content @visible">
                    <div class="component-cost">
                        @{
                            var costString = component.SuggestedCosts;
                            var costArray = costString.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
                            foreach (var suggestion in costArray)
                            {
                                var tmp = suggestion.Split(new char[] { ',' });
                                <span>| @tmp[0] - $@tmp[1] |</span>
                            }
                        }
                    </div>
                    <div class="div-list">
                        <div id="img-preview-@component.RoomComponentTypeId" class="img-thumbnails">
                            @foreach (var damage in component.Damages)
                            {
                                if (damage.ImagePath != null)
                                {
                                    <div><img class="uploaded-img thumbnail" src=@damage.ImagePath alt="Damage Image Thumbnail"></div>
                                }
                            }
                        </div>
                        <div id="modal-@component.RoomComponentTypeId" class="img-modal">
                            <div class="modal-header"><i class="material-icons clear">clear</i></div>
                            <div class="modal-content">
                                @foreach (var damage in component.Damages)
                                {
                                    if (damage.ImagePath != null)
                                    {
                                        <div class="img-slide"><img class="uploaded-img" src=@damage.ImagePath alt="Damage Image Enlarged"></div>
                                    }
                                }
                                <i class="material-icons backward">navigate_before</i>
                                <i class="material-icons forward">navigate_next</i>
                            </div>
                        </div>
                        @foreach (var damage in component.Damages)
                        {
                            if (damage.Description != null)
                            {
                                <div class="divAddOn existing-damage-wrapper">
                                    <p class="divAddOn-field existing-damage">@damage.Description</p>
                                </div>
                            }
                        }
                    </div>
                    <div>
                        <p>Add Charge</p>
                    </div>
                    <div class="divAddOn-vert">
                        <div class="divAddOn-vert-field">
                            <div class="divAddOn">
                                <input class="divAddOn-field adding-fines" type="text" placeholder="Charge" id="text-input-@component.RoomComponentTypeId" />
                                <input class="divAddOn-item adding-fines" type="number" placeholder="$" id="fine-amount-input-@component.RoomComponentTypeId" />
                            </div>
                        </div>
                        <div class="divAddOn-vert-row">
                            <label class="divAddOn-item">Charge to:</label>
                            <select class="divAddOn-field" id="fine-owner-@component.RoomComponentTypeId">
                                <option value="0">All - Split the charge</option>
                                @foreach (var person in Model.CommonAreaMembers)
                                {
                                    <option value="@person.GordonId">@person.FirstName @person.LastName</option>
                                }
                            </select>
                        </div>
                        <button class="divAddOn-vert-field" onclick="addFine(@component.RoomComponentTypeId, @Model.RciId);" id="add-@component.RoomComponentTypeId">Add</button>
                    </div>
                    <div class="horizontal-scroll-wrapper">
                        <table class="fine-table" id="fine-list-@component.RoomComponentTypeId">
                            <tr>
                                <th>Charge</th>
                                <th>Amount ($)</th>
                                <th>Charge To:</th>
                                <th>Delete</th>
                            </tr>
                            @foreach (var fine in component.Fines)
                            {
                                <tr>
                                    <td>@fine.Reason</td>
                                    <td class="center-table-col">@fine.Amount</td>
                                    <td>@Model.CommonAreaMembers.Where(x => x.GordonId == fine.GordonId).Select(m => m.FirstName + " " + m.LastName).FirstOrDefault()</td>
                                    <td class="center-table-col"><i class="material-icons" onclick="deleteFine(event, this, @fine.FineId)">close</i></td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
        }
    }


    <div class="distribute-evenly">
        <button id="next-button" onclick="window.location.href = '@Url.Action(actionName:"CommonAreaSignature", controllerName:"RciCheckout", routeValues: new { id = Model.RciId })'">Next</button>
    </div>
</div>
