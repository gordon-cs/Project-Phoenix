@model Phoenix.Models.ViewModels.CheckoutIndividualRoomRciViewModel

@{
    ViewBag.Title = "RCI Checkout";
    ViewBag.ViewTitle = "RCI Checkout: " + Model.FirstName + " " + Model.LastName;
    ViewBag.MenuExists = "T";
}

@section Styles{
    @Styles.Render("~/bundles/page_specific/css/rci-checkout")
}

@section Scripts{
    @Scripts.Render("~/bundles/page_specific/js/rci-checkout")
}

@section Menu {
    <ul class="drawer-menu">
        <li class="drawer-menu-item"><a href="@Url.Action(actionName: "Index", controllerName: "Dashboard")">Dashboard</a></li>
        <li class="drawer-menu-item logout-button">Logout</li>
    </ul>
}

<div class="view" data="@Model.GordonID">

        @foreach (var component in Model.RciComponent)
        {
            <div class="pane component" id="@component.RciComponentID">
                <h2 class="pane-title div-list-toggle">@component.RciComponentName<i class="material-icons">arrow_drop_down</i></h2>
                <div class="checkout pane-content">
                    <p><b>Possible places:</b> @component.RciComponentDescription</p>
                    <div class="div-list">
                        <div id="img-preview-@component.RciComponentID" class="img-thumbnails">
                            @foreach (var damage in component.Damage)
                            {
                                if (damage.DamageType.Equals("IMAGE"))
                                {
                                    <div><img class="uploaded-img thumbnail" src=@damage.DamageImagePath alt="Damage Image Thumbnail"></div>
                                }
                            }
                        </div>
                        <div id="modal-@component.RciComponentID" class="img-modal">
                            <div class="modal-header"><i class="material-icons clear">clear</i></div>
                            <div class="modal-content">
                                @foreach (var damage in component.Damage)
                                {
                                    if (damage.DamageType.Equals("IMAGE"))
                                    {
                                        <div class="img-slide"><img class="uploaded-img" src=@damage.DamageImagePath alt="Damage Image Enlarged"></div>
                                    }
                                }
                                <i class="material-icons backward">navigate_before</i>
                                <i class="material-icons forward">navigate_next</i>
                            </div>
                        </div>
                        @foreach (var damage in component.Damage)
                        {
                            if (damage.DamageDescription != null)
                            {
                                <div class="divAddOn existing-damage-wrapper">
                                    <p class="divAddOn-field existing-damage">@damage.DamageDescription</p>
                                </div>
                            }
                        }
                    </div>
                    <div>
                        <p>Add Charge(s)</p>
                    </div>
                    <div class="divAddOn">
                        <input class="divAddOn-field adding-fines" type="text" placeholder="Fine" id="text-input-@component.RciComponentID" />
                        <input class="divAddOn-item adding-fines" type="number" placeholder="2.00" id="fine-amount-input-@component.RciComponentID" />
                        <button class="divAddOn-item" onclick="addFine(@component.RciComponentID);" id="add-@component.RciComponentID">Add</button>
                    </div>
                    <div class="div-list" id="fine-list-@component.RciComponentID">
                        @foreach (var fine in component.Fine)
                        {
                            <div class="divAddOn">
                                <p class="divAddOn-field">@fine.Reason</p>
                                <span class="divAddOn-item">$</span>
                                <p class="divAddOn-item">@fine.FineAmount</p>
                                <i class='divAddOn-item material-icons' onclick="deleteExistingFines(event, this, @fine.FineID)">delete</i>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
  
    <div class="distribute-evenly">
        <button id="save-button">Save</button>
        <button id="next-button" data="@Url.Action(actionName:"ResidentSignature", controllerName:"RciCheckout", routeValues: new { id = Model.RciID })">Next</button>
    </div>
</div>
