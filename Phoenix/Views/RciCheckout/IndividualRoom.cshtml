@model Phoenix.Models.ViewModels.FullRciViewModel

@{
    ViewBag.Title = "Checkout";
    ViewBag.ViewTitle = "Checkout: " + Model.FirstName + " " + Model.LastName;
    ViewBag.Name = TempData["user"];
    ViewBag.MenuExists = "T";
    ViewBag.Role = TempData["role"];
}

@section Styles{
    @Styles.Render("~/bundles/page_specific/css/rci-checkout")
}

@section Scripts{
    @Scripts.Render("~/bundles/page_specific/js/rci-checkout")
}
<div class="view" data="@Model.GordonId">
    <div class="pane">

        <h2 class="pane-title">@ViewBag.ViewTitle</h2>

        @foreach (var component in Model.RoomComponents)
        {
            var visible = "hide";
            if (component.Damages.Any() || component.Fines.Any())
            {
                visible = "show";
            }
            <div class="pane component" id="@component.RoomComponentTypeId">
                <h2 class="pane-title div-list-toggle component-title">@component.RoomComponentName<i class="material-icons">arrow_drop_down</i></h2>
                <div class="checkout pane-content @visible">
                    <!--div class="component-cost">
                        @{
                            var costString = component.SuggestedCosts;
                            var costArray = costString.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
                            foreach (var suggestion in costArray)
                            {
                                var tmp = suggestion.Split(new char[] { ',' });
                                <span>| @tmp[0] - $@tmp[1] |</span>
                            }
                        }
                    </div-->
                    <div class="div-list">
                        <div id="img-preview-@component.RoomComponentTypeId" class="img-thumbnails">
                            @foreach (var damage in component.Damages)
                            {
                                if (damage.ImagePath != null)
                                {
                                    <div><img class="uploaded-img thumbnail" src=@damage.ImagePath alt="Damage Image Thumbnail"></div>
                                }
                            }
                        </div>
                        <div id="modal-@component.RoomComponentTypeId" class="img-modal">
                            <div class="modal-header"><i class="material-icons clear">clear</i></div>
                            <div class="modal-content">
                                @foreach (var damage in component.Damages)
                                {
                                    if (damage.ImagePath != null)
                                    {
                                        <div class="img-slide"><img class="uploaded-img" src=@damage.ImagePath alt="Damage Image Enlarged"></div>
                                    }
                                }
                                <i class="material-icons backward">navigate_before</i>
                                <i class="material-icons forward">navigate_next</i>
                            </div>
                        </div>

                        @foreach (var damage in component.Damages)
                        {
                            if (damage.Description != null)
                            {
                                <div class="divAddOn existing-damage-wrapper">
                                    <p class="divAddOn-field existing-damage">@damage.Description</p>
                                </div>
                            }
                        }
                    </div>
                    <div>
                        <p>Add Charge(s)</p>
                    </div>
                    <div class="divAddOn">
                        <input class="divAddOn-field adding-fines" type="text" placeholder="Charge" id="text-input-@component.RoomComponentTypeId" />
                        <input class="divAddOn-item adding-fines" type="number" placeholder="$" id="fine-amount-input-@component.RoomComponentTypeId" />
                        <button class="divAddOn-item" onclick="addFine(@component.RoomComponentTypeId, @Model.RciId);" id="add-@component.RoomComponentTypeId">Add</button>
                    </div>
                    <div class="horizontal-scroll-wrapper">
                        <table class="fine-table" id="fine-list-@component.RoomComponentTypeId">
                            <tr>
                                <th>Charge</th>
                                <th>Amount ($)</th>
                                <th>Delete</th>
                            </tr>
                            @foreach (var fine in component.Fines)
                            {
                                <tr>
                                    <td>@fine.Reason</td>
                                    <td class="center-table-col">@fine.Amount</td>
                                    <td class="center-table-col"><i class="material-icons" onclick="deleteFine(event, this, @fine.FineId)">close</i></td>
                                </tr>
                            }
                        </table>
                    </div>

                </div>
            </div>
                            }
    </div>
    <div class="distribute-evenly">
        <button id="next-button" onclick="window.location.href = '@Url.Action(actionName:"ResidentSignature", controllerName:"RciCheckout", routeValues: new { id = Model.RciId })'">Next</button>
    </div>
</div>